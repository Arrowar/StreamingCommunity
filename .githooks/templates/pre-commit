#!/bin/bash
# Pre-commit hook per controllare l'esecuzione di ruff

# Colori per output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funzione per stampare messaggi colorati
print_error() {
    echo -e "${RED}❌ ERRORE:${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}⚠️  ATTENZIONE:${NC} $1"
}

print_info() {
    echo -e "${BLUE}ℹ️  INFO:${NC} $1"
}

print_success() {
    echo -e "${GREEN}✅ SUCCESSO:${NC} $1"
}

# Controlla se ruff è installato
if ! command -v ruff &> /dev/null; then
    print_error "ruff non è installato!"
    echo -e "\n${YELLOW}Per installare ruff, esegui uno dei seguenti comandi:${NC}"
    echo "  pip install ruff"
    echo "  pip install -r requirements.txt"
    echo ""
    exit 1
fi

# Ottieni la lista dei file Python modificati
staged_files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(py)$')

if [ -z "$staged_files" ]; then
    print_info "Nessun file Python da controllare."
    exit 0
fi

print_info "Controllo dei file Python con ruff..."

# Flag per tracciare se ci sono errori
has_errors=false

# Esegui ruff check sui file staged
echo -e "\n${BLUE}🔍 Esecuzione di ruff check...${NC}"
if ! ruff check $staged_files; then
    print_error "ruff check ha trovato degli errori!"
    has_errors=true
    echo -e "\n${YELLOW}Per correggere automaticamente gli errori risolvibili, esegui:${NC}"
    echo "  ruff check --fix $staged_files"
    echo ""
fi

# Esegui ruff format sui file staged per controllare la formattazione
echo -e "\n${BLUE}🎨 Controllo formattazione con ruff format...${NC}"
if ! ruff format --check $staged_files; then
    print_error "Alcuni file non sono formattati correttamente!"
    has_errors=true
    echo -e "\n${YELLOW}Per formattare automaticamente i file, esegui:${NC}"
    echo "  ruff format $staged_files"
    echo ""
fi

# Se ci sono errori, blocca il commit
if [ "$has_errors" = true ]; then
    echo -e "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    print_error "Commit bloccato a causa di errori di linting/formattazione!"
    echo -e "\n${YELLOW}Comandi utili per risolvere i problemi:${NC}"
    echo "  ruff check --fix .              # Corregge automaticamente gli errori risolvibili"
    echo "  ruff format .                   # Formatta tutto il codice"
    echo "  ruff check --fix && ruff format # Esegue entrambi i comandi"
    echo ""
    echo -e "${BLUE}Dopo aver risolto i problemi, esegui nuovamente:${NC}"
    echo "  git add ."
    echo "  git commit"
    echo -e "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    exit 1
fi

print_success "Tutti i controlli di ruff sono passati!"
print_info "Procedendo con il commit..."
exit 0
